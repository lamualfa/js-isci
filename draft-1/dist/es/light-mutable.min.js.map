{"version":3,"sources":["light-mutable.min.js"],"names":["f","exports","module","define","amd","window","global","self","this","isci","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","opts","KEYWORD_REGEX","RegExp","PARAM_REGEX","KEYWORD_HANDLERS","keywordHandlers","next","params","matchedParam","matchedKeyword","result","pattern","exec","substring","index","Object","prototype","hasOwnProperty","keywords","keywordOpt","type","2","reverse","str","reversed","incrNumber","startNumber","increaser","incrCharset","charsetLength","charset","currentIndex","indexCharset","incrCharsets","charsets","subCharset","subCharsetLength","3","randCharset","charAt","Math","floor","random","randomString","maxLength","minLength","4","./libs/createMutable","./libs/keywords/incr","./libs/keywords/rand"],"mappings":"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","file":"light-mutable.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.isci = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nmodule.exports = function(opts) {\n  const KEYWORD_REGEX = new RegExp('\\\\[([^\\\\[\\\\]]+)\\\\]');\n  const PARAM_REGEX = new RegExp('<([^<>]+)>');\n  const KEYWORD_HANDLERS = {\n    ...opts.keywordHandlers\n  };\n\n  const processKeyword = keywordOpt => {\n    return KEYWORD_HANDLERS[keywordOpt.type]\n      ? KEYWORD_HANDLERS[keywordOpt.type](keywordOpt)\n      : '';\n  };\n\n  /**\n   * Get next ID from ISCI Schema\n   * @returns {string}\n   * @param {object} isci ISCI Schema\n   * @param {string} isci.name ISCI Name\n   * @param {string} isci.pattern ISCI Pattern\n   * @param {object} isci.keywords ISCI Keywords\n   * @param {object} params Your parameter to be passed\n   */\n  const next = (isci, params = {}) => {\n    let result = isci.pattern;\n    let matchedParam;\n    let matchedKeyword;\n\n    while ((matchedParam = PARAM_REGEX.exec(result)) !== null)\n      result =\n        result.substring(0, matchedParam.index) +\n        (Object.prototype.hasOwnProperty.call(params, matchedParam[1])\n          ? params[matchedParam[1]]\n          : '') +\n        result.substring(matchedParam.index + matchedParam[0].length);\n\n    while ((matchedKeyword = KEYWORD_REGEX.exec(result)) !== null)\n      result =\n        result.substring(0, matchedKeyword.index) +\n        (isci.keywords[matchedKeyword[1]]\n          ? processKeyword(isci.keywords[matchedKeyword[1]])\n          : '') +\n        result.substring(matchedKeyword.index + matchedKeyword[0].length);\n\n    return result;\n  };\n\n  return { next };\n};\n\n},{}],2:[function(require,module,exports){\nconst reverse = str => {\n  let length = str.length;\n  let reversed = '';\n  while (length--) reversed += str[length];\n\n  return reversed;\n};\n\nmodule.exports = {\n  incrNumber: opts => {\n    const result = opts.startNumber + opts.index + opts.increaser;\n\n    opts.index += opts.increaser;\n\n    return result;\n  },\n  incrCharset: opts => {\n    const charsetLength = opts.charset.length;\n\n    let currentIndex = opts.index;\n    let length = opts.length;\n    let result = '';\n\n    while (length--) {\n      const indexCharset = currentIndex % charsetLength;\n\n      result += opts.charset[indexCharset];\n\n      currentIndex = (currentIndex - indexCharset) / charsetLength;\n    }\n\n    result = reverse(result);\n    opts.index += opts.increaser;\n\n    return result;\n  },\n  incrCharsets: opts => {\n    let result = '';\n    let index = opts.index;\n\n    let i = opts.charsets.length;\n    while (i--) {\n      const subCharset = opts.charsets[i];\n      const subCharsetLength = subCharset.length;\n\n      const indexCharset = index % subCharsetLength;\n\n      result += subCharset[indexCharset];\n\n      index = (index - indexCharset) / subCharsetLength;\n    }\n\n    result = reverse(result);\n    opts.index += opts.increaser;\n\n    return result;\n  }\n};\n\n},{}],3:[function(require,module,exports){\nconst randomString = (charset, length) => {\n  let result = '';\n\n  while (length--)\n    result += charset.charAt(Math.floor(Math.random() * charset.length));\n\n  return result;\n};\n\nmodule.exports = {\n  randCharset: keywordOpt =>\n    randomString(\n      keywordOpt.charset,\n      keywordOpt.length\n        ? keywordOpt.length\n        : Math.floor(\n            Math.random() * (keywordOpt.maxLength - keywordOpt.minLength + 1)\n          ) + keywordOpt.minLength\n    )\n};\n\n},{}],4:[function(require,module,exports){\nmodule.exports = require('./libs/createMutable')({\n  keywordHandlers: {\n    ...require('./libs/keywords/incr'),\n    ...require('./libs/keywords/rand')\n  }\n});\n\n},{\"./libs/createMutable\":1,\"./libs/keywords/incr\":2,\"./libs/keywords/rand\":3}]},{},[4])(4)\n});\n"]}